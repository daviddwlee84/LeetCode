from Naive834 import Solution as Naive
from SubtreeSumAndCount834 import Solution as SubtreeSumAndCount


testcases = [
    (6, [[0, 1], [0, 2], [2, 3], [2, 4], [2, 5]], [8, 12, 6, 10, 10, 10]),
    (1, [], [0]),
    (2, [[1, 0]], [1, 1]),
    (200, [[151, 17], [132, 17], [193, 169], [55, 63], [134, 56], [194, 64], [92, 44], [196, 9], [58, 72], [164, 89], [96, 50], [179, 135], [78, 53], [81, 151], [95, 4], [143, 80], [83, 11], [2, 123], [14, 119], [178, 27], [137, 166], [183, 31], [48, 67], [179, 10], [161, 170], [156, 67], [171, 159], [109, 133], [39, 157], [77, 48], [108, 172], [36, 94], [17, 190], [25, 125], [8, 179], [115, 26], [126, 90], [15, 63], [199, 118], [35, 94], [131, 6], [137, 9], [168, 165], [41, 144], [164, 138], [89, 67], [157, 154], [15, 152], [9, 139], [85, 191], [150, 155], [6, 161], [128, 50], [51, 176], [55, 199], [84, 3], [40, 36], [75, 72], [61, 53], [73, 38], [13, 156], [93, 5], [73, 47], [129, 137], [23, 107], [55, 170], [52, 35], [161, 62], [195, 90], [104, 64], [195, 40], [46, 17], [167, 89], [185, 63], [34, 70], [17, 98], [69, 58], [20, 27], [7, 68], [178, 147], [57, 109], [45, 185], [155, 143], [178, 73], [160, 11], [158, 171], [134, 2], [11, 175], [73, 82], [22, 126], [111, 86], [40, 115], [25, 73], [69, 101], [103, 168], [162, 23], [90, 55], [135, 30], [34, 37], [136, 102], [
     116, 67], [68, 73], [190, 9], [56, 180], [182, 148], [156, 174], [84, 64], [4, 187], [171, 50], [195, 146], [122, 46], [97, 25], [119, 73], [38, 57], [114, 50], [53, 182], [99, 137], [94, 54], [49, 150], [21, 6], [38, 17], [156, 141], [197, 190], [61, 186], [18, 41], [117, 151], [16, 45], [144, 75], [47, 191], [103, 115], [140, 180], [110, 17], [190, 113], [155, 38], [182, 161], [177, 67], [67, 64], [34, 160], [76, 40], [1, 161], [153, 38], [107, 198], [163, 177], [21, 86], [59, 87], [46, 33], [173, 170], [192, 130], [89, 5], [97, 87], [157, 73], [4, 88], [65, 105], [23, 60], [32, 63], [6, 142], [116, 43], [10, 193], [107, 17], [184, 67], [38, 124], [152, 29], [12, 168], [9, 19], [105, 79], [66, 71], [67, 120], [64, 121], [89, 17], [134, 42], [167, 112], [32, 51], [192, 41], [108, 38], [47, 83], [101, 0], [50, 189], [149, 72], [73, 128], [107, 95], [106, 91], [53, 106], [32, 66], [27, 181], [105, 172], [44, 114], [75, 155], [47, 28], [141, 179], [134, 77], [74, 50], [188, 40], [102, 38], [145, 31], [108, 145], [179, 24], [100, 73], [17, 90], [127, 175]], [2203, 1597, 1843, 1677, 1413, 1159, 1587, 1401, 1835, 1207, 1831, 1553, 2051, 1469, 1401, 1441, 1835, 845, 1815, 1405, 1589, 1781, 1333, 1221, 1835, 1197, 1665, 1391, 1381, 1835, 2031, 1467, 1437, 1237, 1939, 1857, 1469, 2137, 893, 1399, 1279, 1617, 1845, 1489, 1755, 1637, 1039, 1183, 1277, 1453, 1365, 1633, 2055, 1771, 1859, 1071, 1841, 1087, 1615, 1785, 1419, 1967, 1597, 1247, 1283, 1661, 1633, 1095, 1203, 1809, 2137, 1831, 1423, 1007, 1563, 1235, 1477, 1461, 1969, 1661, 1453, 1237, 1205, 1367, 1479, 1577, 1977, 1587, 1611, 963, 939, 2165, 1953, 1357, 1661, 1219, 1563, 1391, 1043, 1597, 1205, 2005, 1089, 1659, 1481, 1463, 1967, 1027, 1077, 1283, 1043, 2175, 1357, 1221, 1559, 1467, 1291, 1237, 1465, 1203, 1293, 1481, 1237, 2041, 1091, 1395, 1135, 1947, 1185, 1597, 2011, 1785, 1043, 1481, 1647, 1833, 1287, 1399, 1357, 1405, 2235, 1453, 1785, 1255, 1425, 1271, 1305, 1395, 1781, 1621, 1255, 1039, 1637, 1091, 1399, 1059, 1271, 1201, 1757, 1757, 1745, 1399, 1419, 1489, 1159, 2051, 1597, 1159, 1853, 2225, 1233, 1559, 1269, 1431, 1469, 1749, 1831, 1291, 1197, 1637, 2037, 1589, 1583, 1665, 1293, 1441, 2165, 1611, 1477, 1563, 1023, 1379, 1813, 2027, 1481, 1107, 1405, 1221, 1225, 1267])
]


def test_naive():
    for n, edges, ans in testcases:
        assert Naive().sumOfDistancesInTree(n, edges) == ans


def test_subtree_sum_and_count():
    for n, edges, ans in testcases:
        assert SubtreeSumAndCount().sumOfDistancesInTree(n, edges) == ans
